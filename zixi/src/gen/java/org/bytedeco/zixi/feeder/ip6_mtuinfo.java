// Targeted by JavaCPP version 1.5.8: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.feeder;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.feeder.*;


/* IPv6 MTU information.  */
@Properties(inherit = org.bytedeco.zixi.presets.zixiFeeder.class)
public class ip6_mtuinfo extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ip6_mtuinfo() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ip6_mtuinfo(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ip6_mtuinfo(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ip6_mtuinfo position(long position) {
        return (ip6_mtuinfo)super.position(position);
    }
    @Override public ip6_mtuinfo getPointer(long i) {
        return new ip6_mtuinfo((Pointer)this).offsetAddress(i);
    }

    public native @ByRef sockaddr_in6 ip6m_addr(); public native ip6_mtuinfo ip6m_addr(sockaddr_in6 setter); /* dst address including zone ID */
    public native @Cast("uint32_t") int ip6m_mtu(); public native ip6_mtuinfo ip6m_mtu(int setter);		   /* path MTU in host byte order */
  }
