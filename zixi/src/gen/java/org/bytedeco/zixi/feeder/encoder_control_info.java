// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.feeder;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.feeder.*;



// configuration structure for encoder feedback
@Properties(inherit = org.bytedeco.zixi.presets.zixiFeeder.class)
public class encoder_control_info extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public encoder_control_info() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public encoder_control_info(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public encoder_control_info(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public encoder_control_info position(long position) {
        return (encoder_control_info)super.position(position);
    }
    @Override public encoder_control_info getPointer(long i) {
        return new encoder_control_info((Pointer)this).position(position + i);
    }

	public native @Cast("unsigned int") int max_bitrate(); public native encoder_control_info max_bitrate(int setter);					// in bps, maximal threshold
	public native @Cast("unsigned int") int min_bitrate(); public native encoder_control_info min_bitrate(int setter);					// in bps, minimal threshold
	public native @Cast("unsigned int") int update_interval(); public native encoder_control_info update_interval(int setter);				// in milliseconds, 0 - default, callback will not be called unless update_interval milliseconds have passed since last call
	public native @Cast("unsigned int") int aggressiveness(); public native encoder_control_info aggressiveness(int setter);				// between 0 - 100, recommended 20
	public native ZIXI_ENCODER_SETBITRATE_FUNCTION setter(); public native encoder_control_info setter(ZIXI_ENCODER_SETBITRATE_FUNCTION setter);	// user callback function
	public native Pointer param(); public native encoder_control_info param(Pointer setter);								// pointer to user data (will be passed as userdata when setter is invoked)
}
