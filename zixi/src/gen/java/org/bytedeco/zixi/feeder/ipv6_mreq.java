// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.feeder;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.feeder.*;

// #endif /* !__USE_KERNEL_IPV6_DEFS */

// #ifdef __USE_MISC
// #endif

// #if !__USE_KERNEL_IPV6_DEFS
/* Likewise, for IPv6.  */
@Properties(inherit = org.bytedeco.zixi.presets.zixiFeeder.class)
public class ipv6_mreq extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ipv6_mreq() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ipv6_mreq(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ipv6_mreq(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ipv6_mreq position(long position) {
        return (ipv6_mreq)super.position(position);
    }
    @Override public ipv6_mreq getPointer(long i) {
        return new ipv6_mreq((Pointer)this).position(position + i);
    }

    /* IPv6 multicast address of group */
    public native @ByRef in6_addr ipv6mr_multiaddr(); public native ipv6_mreq ipv6mr_multiaddr(in6_addr setter);

    /* local interface */
    public native @Cast("unsigned int") int ipv6mr_interface(); public native ipv6_mreq ipv6mr_interface(int setter);
  }
