// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.client;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.client.*;

/*
 * The following structure is private; do not use it from user applications.
 * It is used to communicate IP_MSFILTER/IPV6_MSFILTER information between
 * the RFC 3678 libc functions and the kernel.
 */
@Properties(inherit = org.bytedeco.zixi.presets.zixiClient.class)
public class __msfilterreq extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public __msfilterreq() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public __msfilterreq(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public __msfilterreq(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public __msfilterreq position(long position) {
        return (__msfilterreq)super.position(position);
    }
    @Override public __msfilterreq getPointer(long i) {
        return new __msfilterreq((Pointer)this).position(position + i);
    }

	public native @Cast("uint32_t") int msfr_ifindex(); public native __msfilterreq msfr_ifindex(int setter);  /* interface index */
	public native @Cast("uint32_t") int msfr_fmode(); public native __msfilterreq msfr_fmode(int setter);    /* filter mode for group */
	public native @Cast("uint32_t") int msfr_nsrcs(); public native __msfilterreq msfr_nsrcs(int setter);    /* # of sources in msfr_srcs */
	public native @Cast("uint32_t") int __msfr_align(); public native __msfilterreq __msfr_align(int setter);
	public native @ByRef sockaddr_storage msfr_group(); public native __msfilterreq msfr_group(sockaddr_storage setter);    /* group address */
	public native sockaddr_storage msfr_srcs(); public native __msfilterreq msfr_srcs(sockaddr_storage setter);
}
