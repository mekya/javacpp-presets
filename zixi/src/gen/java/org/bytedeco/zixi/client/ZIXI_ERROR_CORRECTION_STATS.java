// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.client;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.client.*;


@Properties(inherit = org.bytedeco.zixi.presets.zixiClient.class)
public class ZIXI_ERROR_CORRECTION_STATS extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ZIXI_ERROR_CORRECTION_STATS() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ZIXI_ERROR_CORRECTION_STATS(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ZIXI_ERROR_CORRECTION_STATS(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ZIXI_ERROR_CORRECTION_STATS position(long position) {
        return (ZIXI_ERROR_CORRECTION_STATS)super.position(position);
    }
    @Override public ZIXI_ERROR_CORRECTION_STATS getPointer(long i) {
        return new ZIXI_ERROR_CORRECTION_STATS((Pointer)this).position(position + i);
    }

	public native @Cast("unsigned long long") long arq_packets(); public native ZIXI_ERROR_CORRECTION_STATS arq_packets(long setter);
	public native @Cast("unsigned long long") long fec_packets(); public native ZIXI_ERROR_CORRECTION_STATS fec_packets(long setter);

	public native @Cast("unsigned long long") long arq_recovered(); public native ZIXI_ERROR_CORRECTION_STATS arq_recovered(long setter);
	public native @Cast("unsigned long long") long fec_recovered(); public native ZIXI_ERROR_CORRECTION_STATS fec_recovered(long setter);
	public native @Cast("unsigned long long") long not_recovered(); public native ZIXI_ERROR_CORRECTION_STATS not_recovered(long setter);

	public native @Cast("unsigned long long") long duplicates(); public native ZIXI_ERROR_CORRECTION_STATS duplicates(long setter);
	public native @Cast("unsigned long long") long requests(); public native ZIXI_ERROR_CORRECTION_STATS requests(long setter);
	public native @Cast("unsigned long long") long overflow(); public native ZIXI_ERROR_CORRECTION_STATS overflow(long setter);

	public native @Cast("unsigned int") int fec_bit_rate(); public native ZIXI_ERROR_CORRECTION_STATS fec_bit_rate(int setter);
	public native @Cast("unsigned int") int fec_packet_rate(); public native ZIXI_ERROR_CORRECTION_STATS fec_packet_rate(int setter);

	public native @Cast("unsigned long long") long nulls_stuffed(); public native ZIXI_ERROR_CORRECTION_STATS nulls_stuffed(long setter);

	public native @Cast("unsigned long long") long late_dropped(); public native ZIXI_ERROR_CORRECTION_STATS late_dropped(long setter);		// packets dropped because of max_output_jitter limit

}
