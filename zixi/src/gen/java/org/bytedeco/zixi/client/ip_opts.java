// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.client;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.client.*;


// #if !defined(_POSIX_C_SOURCE) || defined(_DARWIN_C_SOURCE)
/*
 * Structure used to describe IP options.
 * Used to store options internally, to pass them to a process,
 * or to restore options retrieved earlier.
 * The ip_dst is used for the first-hop gateway when using a source route
 * (this gets put into the header proper).
 */
@Properties(inherit = org.bytedeco.zixi.presets.zixiClient.class)
public class ip_opts extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ip_opts() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ip_opts(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ip_opts(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ip_opts position(long position) {
        return (ip_opts)super.position(position);
    }
    @Override public ip_opts getPointer(long i) {
        return new ip_opts((Pointer)this).position(position + i);
    }

	public native @ByRef in_addr ip_dst(); public native ip_opts ip_dst(in_addr setter);         /* first hop, 0 w/o src rt */
	public native @Cast("char") byte ip_opts(int i); public native ip_opts ip_opts(int i, byte setter);
	@MemberGetter public native @Cast("char*") BytePointer ip_opts();            /* actually variable in size */
}
