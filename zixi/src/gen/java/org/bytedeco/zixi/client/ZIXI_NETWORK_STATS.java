// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.zixi.client;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.zixi.global.client.*;



@Properties(inherit = org.bytedeco.zixi.presets.zixiClient.class)
public class ZIXI_NETWORK_STATS extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ZIXI_NETWORK_STATS() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ZIXI_NETWORK_STATS(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ZIXI_NETWORK_STATS(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ZIXI_NETWORK_STATS position(long position) {
        return (ZIXI_NETWORK_STATS)super.position(position);
    }
    @Override public ZIXI_NETWORK_STATS getPointer(long i) {
        return new ZIXI_NETWORK_STATS((Pointer)this).position(position + i);
    }

	public native @Cast("unsigned long long") long packets(); public native ZIXI_NETWORK_STATS packets(long setter);
	public native @Cast("unsigned long long") long bytes(); public native ZIXI_NETWORK_STATS bytes(long setter);

	public native @Cast("unsigned long long") long out_of_order(); public native ZIXI_NETWORK_STATS out_of_order(long setter);
	public native @Cast("unsigned long long") long dropped(); public native ZIXI_NETWORK_STATS dropped(long setter);
	public native @Cast("unsigned long long") long duplicates(); public native ZIXI_NETWORK_STATS duplicates(long setter);
	public native @Cast("unsigned long long") long overflow(); public native ZIXI_NETWORK_STATS overflow(long setter);

	public native @Cast("unsigned int") int bit_rate(); public native ZIXI_NETWORK_STATS bit_rate(int setter);
	public native @Cast("unsigned int") int packet_rate(); public native ZIXI_NETWORK_STATS packet_rate(int setter);

	public native @Cast("unsigned int") int jitter(); public native ZIXI_NETWORK_STATS jitter(int setter);
	public native @Cast("unsigned int") int rtt(); public native ZIXI_NETWORK_STATS rtt(int setter);
	public native @Cast("unsigned int") int latency(); public native ZIXI_NETWORK_STATS latency(int setter);

	public native @Cast("unsigned long long") long available_bitrate(); public native ZIXI_NETWORK_STATS available_bitrate(long setter);
	public native @Cast("char") byte congested(); public native ZIXI_NETWORK_STATS congested(byte setter);
}
