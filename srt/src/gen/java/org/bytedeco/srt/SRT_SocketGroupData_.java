// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.srt;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.srt.global.srt.*;


@Properties(inherit = org.bytedeco.srt.presets.srt.class)
public class SRT_SocketGroupData_ extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SRT_SocketGroupData_() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SRT_SocketGroupData_(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SRT_SocketGroupData_(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SRT_SocketGroupData_ position(long position) {
        return (SRT_SocketGroupData_)super.position(position);
    }
    @Override public SRT_SocketGroupData_ getPointer(long i) {
        return new SRT_SocketGroupData_((Pointer)this).offsetAddress(i);
    }

    public native @Cast("SRTSOCKET") int id(); public native SRT_SocketGroupData_ id(int setter);
    public native @ByRef sockaddr_storage peeraddr(); public native SRT_SocketGroupData_ peeraddr(sockaddr_storage setter); // Don't want to expose sockaddr_any to public API
    public native @Cast("SRT_SOCKSTATUS") int sockstate(); public native SRT_SocketGroupData_ sockstate(int setter);
    public native @Cast("uint16_t") short weight(); public native SRT_SocketGroupData_ weight(short setter);
    public native @Cast("SRT_MEMBERSTATUS") int memberstate(); public native SRT_SocketGroupData_ memberstate(int setter);
    public native int result(); public native SRT_SocketGroupData_ result(int setter);
    public native int token(); public native SRT_SocketGroupData_ token(int setter);
}
