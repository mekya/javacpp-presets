// Targeted by JavaCPP version 1.5.8: DO NOT EDIT THIS FILE

package org.bytedeco.srt;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.srt.global.srt.*;


/*
 * Least amount of information that a sockaddr requires.
 * Sockaddr_header is a compatible prefix structure of
 * all sockaddr objects.
 */
@Properties(inherit = org.bytedeco.srt.presets.srt.class)
public class __sockaddr_header extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public __sockaddr_header() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public __sockaddr_header(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public __sockaddr_header(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public __sockaddr_header position(long position) {
        return (__sockaddr_header)super.position(position);
    }
    @Override public __sockaddr_header getPointer(long i) {
        return new __sockaddr_header((Pointer)this).offsetAddress(i);
    }

	public native @Cast("__uint8_t") byte sa_len(); public native __sockaddr_header sa_len(byte setter);
	public native @Cast("sa_family_t") byte sa_family(); public native __sockaddr_header sa_family(byte setter);
}
